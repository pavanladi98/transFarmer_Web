{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavan.ladi\\\\arya_codes\\\\trans-farmer\\\\src\\\\BillingPage.jsx\";\nimport React from \"react\";\nimport { Card, Button, Table } from \"antd\";\nimport { Link } from \"react-router-dom\";\nexport default class BillingPage extends React.Component {\n  render() {\n    const data = this.props.location.state;\n    const dataSource = data.filter(item => item.qty !== 0);\n    dataSource.map(item => item.total = item.qty * item.price);\n    let totalPrice = 0;\n    let totalQuantity = 0;\n    dataSource.forEach(item => {\n      totalPrice += item.total;\n      totalQuantity += parseInt(item.qty);\n    });\n    dataSource.push({\n      total: totalPrice,\n      qty: totalQuantity,\n      title: \"Total\"\n    });\n    const columns = [{\n      title: \"Item\",\n      dataIndex: \"title\",\n      key: \"item\",\n      render: item => item === \"Total\" ? React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, item) : item\n    }, {\n      title: \"Quantity\",\n      dataIndex: \"qty\",\n      key: \"qty\"\n    }, {\n      title: \"Rate\",\n      dataIndex: \"price\",\n      key: \"price\",\n      render: text => text ? React.createElement(React.Fragment, null, \"\\u20B9\", text) : null\n    }, {\n      title: \"Price\",\n      dataIndex: \"total\",\n      key: \"total\",\n      render: text => React.createElement(React.Fragment, null, \"\\u20B9\", text)\n    }];\n    return React.createElement(\"div\", {\n      style: {\n        background: \"#ECECEC\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Order details\",\n      bordered: false,\n      style: {\n        width: \"50%\",\n        margin: \"auto\",\n        height: \"380px\",\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: {\n        pathname: \"/sell\",\n        state: data\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"secondary\",\n      size: \"large\",\n      style: {\n        margin: \"3% 5% 0% 35%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      type: \"primary\",\n      size: \"large\",\n      style: {\n        margin: \"3% 25% 0% 10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Confirm\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pavan.ladi/arya_codes/trans-farmer/src/BillingPage.jsx"],"names":["React","Card","Button","Table","Link","BillingPage","Component","render","data","props","location","state","dataSource","filter","item","qty","map","total","price","totalPrice","totalQuantity","forEach","parseInt","push","title","columns","dataIndex","key","text","background","padding","width","margin","height","overflowY","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Table } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class BillingPage extends React.Component {\r\n  render() {\r\n    const data = this.props.location.state;\r\n    const dataSource = data.filter(item => item.qty !== 0);\r\n    dataSource.map(item => (item.total = item.qty * item.price));\r\n    let totalPrice = 0;\r\n    let totalQuantity = 0;\r\n    dataSource.forEach(item => {\r\n      totalPrice += item.total;\r\n      totalQuantity += parseInt(item.qty);\r\n    });\r\n    dataSource.push({ total: totalPrice, qty: totalQuantity, title: \"Total\" });\r\n    const columns = [\r\n      {\r\n        title: \"Item\",\r\n        dataIndex: \"title\",\r\n        key: \"item\",\r\n        render: item => (item === \"Total\" ? <b>{item}</b> : item)\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"qty\",\r\n        key: \"qty\"\r\n      },\r\n      {\r\n        title: \"Rate\",\r\n        dataIndex: \"price\",\r\n        key: \"price\",\r\n        render: text => (text ? <>&#8377;{text}</> : null)\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        dataIndex: \"total\",\r\n        key: \"total\",\r\n        render: text => <>&#8377;{text}</>\r\n      }\r\n    ];\r\n    return (\r\n      <div style={{ background: \"#ECECEC\", padding: \"30px\" }}>\r\n        <Card\r\n          title=\"Order details\"\r\n          bordered={false}\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"auto\",\r\n            height: \"380px\",\r\n            overflowY: \"scroll\"\r\n          }}\r\n        >\r\n          <Table columns={columns} dataSource={dataSource} pagination={false} />\r\n        </Card>\r\n        <Link to={{ pathname: \"/sell\", state: data }}>\r\n          <Button\r\n            type=\"secondary\"\r\n            size=\"large\"\r\n            style={{ margin: \"3% 5% 0% 35%\" }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            style={{ margin: \"3% 25% 0% 10%\" }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}